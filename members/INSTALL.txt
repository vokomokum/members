INSTALLATION

This describes what you need to do to install the members app locally and/or on a webserver. I hope it is complete and correct, contact me if something is wrong, please. -Nic

-- First, the dependencies:

You should have a modern python (2.6+) and a database on your system.
The production version uses postgres, locally you can also use sqlite, with probably not all features working.
To get and update the member app code, you also need git.
This app is meant to be run via Apache when in production (installation help for the link from Apache to this app are also below), but can be run locally with the simple, in-built server.

-- To begin, we create a virtual python environment with all needed Python libraries

Let's call it "vopy".
Go to the directory where your local Python environment should be (when using Apache, it needs to be executable by the Apache user). In this tutorial, let's pretend that it goes in your home dir (~).
$ cd
$ wget https://raw.github.com/pypa/virtualenv/master/virtualenv.py
Here, make sure you use the python you want. This just uses the first in your path:
$ python virtualenv.py vopy
Install some needed libraries
$ cd vopy/bin
$ ./pip install pyramid  # web framework + dependencies
$ ./pip install psycopg2 # Postgres wrapper for Python, for sqlite you would install sqlite3
$ cd ../..
$ rm virtualenv.py

-- Check out the vokomokum code (if you don't have it already)

$ cd <location where you want vokomokum code to go>
$ git clone git://git.assembla.com/vokomokum.git vokomokum 

-- Develop the app (this also installs all needed python libs locally)
$ cd vokomokum/members
$ ~/vopy/bin/python setup.py develop


-- Set which database to use in the .ini file(s)

Here is a typical line from development.ini:
<<<
sqlalchemy.url = postgresql+psycopg2://user:passwd@localhost:5432/vokotest
>>>
where vokotest is the database, and user and passwd have to be set by you.
It seems reasonable that development.ini uses a different database than production.ini
If you want to use sqlite, use the commented example in development.ini 

-- See if the App is served through its own server (if you can access localhost, e.g. on your home PC)

$ ./run 
The Member application should now respond under http://localhost:6543.
This is very useful for local testing of the app. Note that the run script loads development.ini by default, you can change that if you need production.ini.
Do a CTRL-C to stop it, we now turn to installation for what we need to let Apache serve the app (via mod_wsgi).


-- Install the apache mod_wsgi module

1. Download the latest mod_wsgiX.X.tar.gz from http://code.google.com/p/modwsgi (currently: X.X=3.3)
You can do this in your home dir
$ cd
$ wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz
Untar it to some place, then cd into that dir 
$ tar -zxf mod_wsgi-3.3.tar.gz
$ cd mod_wsgi-3.3
$ ./configure --with-python=~/vopy/bin/python
$ make
$ sudo make install
(you can remove the downloaded file/directory later, once mod_wsgi has been installed in Apache)

2. Now make sure that Apache knows about mod_wsgi - add the following line to /etc/apache2/httpd.conf:
LoadModule wsgi_module modules/mod_wsgi.so
Or, on OSX 10.6:
LoadModule wsgi_module libexec/apache2/mod_wsgi.so

3. Restart the Apache server
$ sudo /etc/init.d/apache2 restart
Or, on OSX 10.6:
$ sudo /usr/sbin/apachectl restart
In /var/log/apache2/error_log, there should be a mention of mod_wsgi being reconfigured like this:
[Mon Jan 02 00:06:56 2012] [notice] Apache/2.2.20 (Unix) mod_ssl/2.2.20
OpenSSL/0.9.8r DAV/2 mod_wsgi/3.3 Python/2.7.1 configured -- resuming normal operations

See also: http://code.google.com/p/modwsgi/wiki/QuickInstallationGuide


-- Do some Apache configuration (this is for Apache2 on OSX, might be different on other Unix systems?)

1. In the directory where your Apache looks for config files (e.g. /etc/apache2/vhosts.d or /etc/apache2/other), place a file with this content:
<<<
WSGIPythonHome /home/nic/vopy

NameVirtualHost 127.0.0.1
<VirtualHost 127.0.0.1>
    ServerName members.localhost

    <Directory />
        Order allow,deny
        Allow from all
    </Directory>

    WSGIApplicationGroup %{GLOBAL}
    WSGIDaemonProcess pyramid.dev display-name=%{GROUP} 
    #   user=nic group=staff \ 
    #   python-path=/home/nic/vopy/lib/python2.7/site-packages
    WSGIProcessGroup pyramid.dev
    WSGIScriptAlias / /home/nic/Documents/vokomokum/members/pyramid.wsgi
</VirtualHost>
>>>
Replace WSGIPythonHome with the path to the virtual python environment we made earlier, ServerName with the URL you want the app to be reachable, and 127.0.0.1 with *:80 if you are on a web server. Also adapt the path the pyramid.wsgi script
Hint 1: In pyramid.wsgi, 'production.ini' can be replaced by 'development.ini' for easier debugging and such niceties. this is useful if you are running a test or developing version.
Hint 2: You can look for documentation on mod_wsgi directives here: http://code.google.com/p/modwsgi/wiki/ConfigurationDirectives

2. You also need to make the URL on which the app should be reachable known to the server.
On my local machine, I want to reach it at 'members.localhost', so I add a line to /etc/hosts (in this case: "127.0.0.1      members.localhost"
On a web server, you might need to add a DNS entry (most likely via your webhosters administration)

3. Now restart the Apache server
$ sudo /usr/sbin/apachectl restart

